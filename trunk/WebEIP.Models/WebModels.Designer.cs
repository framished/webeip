//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("WebModels", "ComponentAction", "Component", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebEIP.Models.Component), "Action", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebEIP.Models.Action), true)]
[assembly: EdmRelationshipAttribute("WebModels", "RoleAction", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebEIP.Models.Role), "Action", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebEIP.Models.Action))]
[assembly: EdmRelationshipAttribute("WebModels", "AccountRole", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebEIP.Models.Account), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebEIP.Models.Role))]

#endregion

namespace WebEIP.Models
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class WebModelsContainer : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“WebModelsContainer”部分中的连接字符串初始化新 WebModelsContainer 对象。
        /// </summary>
        public WebModelsContainer() : base("name=WebModelsContainer", "WebModelsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WebModelsContainer 对象。
        /// </summary>
        public WebModelsContainer(string connectionString) : base(connectionString, "WebModelsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WebModelsContainer 对象。
        /// </summary>
        public WebModelsContainer(EntityConnection connection) : base(connection, "WebModelsContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Account> T_Account
        {
            get
            {
                if ((_T_Account == null))
                {
                    _T_Account = base.CreateObjectSet<Account>("T_Account");
                }
                return _T_Account;
            }
        }
        private ObjectSet<Account> _T_Account;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Role> T_Role
        {
            get
            {
                if ((_T_Role == null))
                {
                    _T_Role = base.CreateObjectSet<Role>("T_Role");
                }
                return _T_Role;
            }
        }
        private ObjectSet<Role> _T_Role;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Component> T_Component
        {
            get
            {
                if ((_T_Component == null))
                {
                    _T_Component = base.CreateObjectSet<Component>("T_Component");
                }
                return _T_Component;
            }
        }
        private ObjectSet<Component> _T_Component;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Action> T_Action
        {
            get
            {
                if ((_T_Action == null))
                {
                    _T_Action = base.CreateObjectSet<Action>("T_Action");
                }
                return _T_Action;
            }
        }
        private ObjectSet<Action> _T_Action;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 T_Account EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_Account(Account account)
        {
            base.AddObject("T_Account", account);
        }
    
        /// <summary>
        /// 用于向 T_Role EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_Role(Role role)
        {
            base.AddObject("T_Role", role);
        }
    
        /// <summary>
        /// 用于向 T_Component EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_Component(Component component)
        {
            base.AddObject("T_Component", component);
        }
    
        /// <summary>
        /// 用于向 T_Action EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_Action(Action action)
        {
            base.AddObject("T_Action", action);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebModels", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Account 对象。
        /// </summary>
        /// <param name="accountID">AccountID 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        public static Account CreateAccount(global::System.String accountID, global::System.String password)
        {
            Account account = new Account();
            account.AccountID = accountID;
            account.Password = password;
            return account;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.String _AccountID;
        partial void OnAccountIDChanging(global::System.String value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebModels", "AccountRole", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("WebModels.AccountRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("WebModels.AccountRole", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebModels", Name="Action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Action : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Action 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="method">Method 属性的初始值。</param>
        /// <param name="icon">Icon 属性的初始值。</param>
        /// <param name="componentID">ComponentID 属性的初始值。</param>
        public static Action CreateAction(global::System.Int32 id, global::System.String name, global::System.String method, global::System.String icon, global::System.Int32 componentID)
        {
            Action action = new Action();
            action.ID = id;
            action.Name = name;
            action.Method = method;
            action.Icon = icon;
            action.ComponentID = componentID;
            return action;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                OnMethodChanging(value);
                ReportPropertyChanging("Method");
                _Method = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Method");
                OnMethodChanged();
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Icon
        {
            get
            {
                return _Icon;
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.String _Icon;
        partial void OnIconChanging(global::System.String value);
        partial void OnIconChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentID
        {
            get
            {
                return _ComponentID;
            }
            set
            {
                OnComponentIDChanging(value);
                ReportPropertyChanging("ComponentID");
                _ComponentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComponentID");
                OnComponentIDChanged();
            }
        }
        private global::System.Int32 _ComponentID;
        partial void OnComponentIDChanging(global::System.Int32 value);
        partial void OnComponentIDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebModels", "ComponentAction", "Component")]
        public Component Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("WebModels.ComponentAction", "Component").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("WebModels.ComponentAction", "Component").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Component> ComponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("WebModels.ComponentAction", "Component");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Component>("WebModels.ComponentAction", "Component", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebModels", Name="Component")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Component : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Component 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="icon">Icon 属性的初始值。</param>
        /// <param name="assembly">Assembly 属性的初始值。</param>
        /// <param name="class">Class 属性的初始值。</param>
        public static Component CreateComponent(global::System.Int32 id, global::System.String name, global::System.String icon, global::System.String assembly, global::System.String @class)
        {
            Component component = new Component();
            component.ID = id;
            component.Name = name;
            component.Icon = icon;
            component.Assembly = assembly;
            component.Class = @class;
            return component;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Icon
        {
            get
            {
                return _Icon;
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.String _Icon;
        partial void OnIconChanging(global::System.String value);
        partial void OnIconChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Assembly
        {
            get
            {
                return _Assembly;
            }
            set
            {
                OnAssemblyChanging(value);
                ReportPropertyChanging("Assembly");
                _Assembly = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Assembly");
                OnAssemblyChanged();
            }
        }
        private global::System.String _Assembly;
        partial void OnAssemblyChanging(global::System.String value);
        partial void OnAssemblyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Class
        {
            get
            {
                return _Class;
            }
            set
            {
                OnClassChanging(value);
                ReportPropertyChanging("Class");
                _Class = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Class");
                OnClassChanged();
            }
        }
        private global::System.String _Class;
        partial void OnClassChanging(global::System.String value);
        partial void OnClassChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebModels", "ComponentAction", "Action")]
        public EntityCollection<Action> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Action>("WebModels.ComponentAction", "Action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Action>("WebModels.ComponentAction", "Action", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WebModels", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Role 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.String name)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.Name = name;
            return role;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebModels", "RoleAction", "Action")]
        public EntityCollection<Action> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Action>("WebModels.RoleAction", "Action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Action>("WebModels.RoleAction", "Action", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WebModels", "AccountRole", "Account")]
        public EntityCollection<Account> Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("WebModels.AccountRole", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("WebModels.AccountRole", "Account", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
